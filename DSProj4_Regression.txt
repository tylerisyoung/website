---
title: 'Control Variable Regression Models'
author: ""
date: ""
output:
  html_document:
    df_print: paged
    theme: cerulean
    highlight: haddock
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, fig.align='center', fig.width=9 )
```



```{r}
library( pander )     # formatting tables
library( dplyr )      # data wrangling
library( stargazer )  # regression tables
```


```{r}
URL <- "https://raw.githubusercontent.com/DS4PS/cpp-523-fall-2019/master/labs/class-size-seed-1234.csv"
dat <- read.csv( URL )
```

# Regression Models: Teachers & Class Size / Caffine & Exercise 


```{r, echo=F}
head( dat[c("test","csize","tqual","ses")] ) %>% pander

```
#### Data
* **test** - average classroom score on a standardized test  
* **csize** - classroom size; number of students  
* **tqual** - teacher quality evaluated by third party experts on a scale of 1 to 100 
* **ses** - socio economic status of students measured as median household income  


```{r, fig.width=10, fig.height=10, echo=F, eval=T}

panel.cor <- function(x, y, digits=2, prefix="", cex.cor)
{
    usr <- par("usr"); on.exit(par(usr))
    par(usr = c(0, 1, 0, 1))
    r <- cor(x, y, use="pairwise.complete.obs")
    txt <- format(c(r, 0.123456789), digits=digits)[1]
    txt <- paste(prefix, txt, sep="")
    if(missing(cex.cor)) cex <- 0.8/strwidth(txt)
    
    test <- cor.test(x,y)
    # borrowed from printCoefmat
    Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
                  cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
                  symbols = c("***", "**", "*", ".", " "))
    
    text(0.5, 0.5, txt, cex = 2 )
    text(.7, .8, Signif, cex=3, col=2)
}


panel.smooth <- function (x, y, col = par("col"), bg = NA, pch = par("pch"), 
  cex = 1, col.smooth = "red", span = 2/3, iter = 3, ...) 
{
  points(x, y, pch = 19, col = gray(0.5,0.5), 
         bg = bg, cex = 1.7)
  ok <- is.finite(x) & is.finite(y)
  if (any(ok)) 
    lines(stats::lowess(x[ok], y[ok], f = span, iter = iter), 
      col = col.smooth, lwd=2, ...)
}


pairs( dat[c("test","csize","tqual","ses")], 
       lower.panel=panel.smooth, upper.panel=panel.cor )

```




#### Scatterpolot

Class Size (x-axis) and Test Score (y-axis). This will serve as a visual representation of our baseline model of the relationship between Class Size and Test Score.

```{r, eval=T}
#plot( dat$csize, dat$test, 
#     xlab="Class Size", ylab="Test Scores",
#     main="Relationship Between Class Size and Test Scores" )
#     abline( lm(test~csize,data=dat), col="firebrick", lwd=2 )

# CHANGE THE PLOT STYLE: 
#
# pch=19             # change point style
# cex=1.5            # change point size
# col="firebrick"    # change color *points?*
# bty="n"            # remove bounding box


#Also changed Abline to black so it was visible, 
#made others black instead.

plot( dat$csize, dat$test, col="firebrick", pch=19, bty="n", cex=1.5, xlab="Class Size", ylab="Test Scores",main="Relationship Between Class Size and Test Scores" )
abline( lm(test~csize,data=dat), col="black", lwd=2 )
```


#### Regression & Plot of Class size & Test Scores


$test = b_0 + b_1 \cdot tqual + e1$

```{r, eval=T}
model.01 <- lm( test ~ tqual, data=dat )
e1.test.score <- model.01$residual
plot( dat$csize, e1.test.score )
abline( lm(e1.test.score~dat$csize), col="firebrick", lwd=2 )


```

The strength of the relationship improved dramatically as we have removed any excess or unexplained residual variance from the test scores.
<br>
#### Regression of Test scoreson SES



$test = b_0 + b_1 \cdot ses + e2$

```{r, eval=T}
model.02 <- lm( test ~ ses, data=dat )
e2.test.score <- model.02$residual
plot( dat$csize, e2.test.score )
abline( lm(e2.test.score~dat$csize), col="firebrick", lwd=2 )



```
The strength of the relationship is lost because class size and test score are highly correlated so when we use only the residuals and compare them with test scores, the slope falls flat. 
<br>
#### Analysis

These graphs demonstrate the effects of adding the control variables **Teacher Quality** and **SES** to the baseline model of the relationship between **Class Size** and **Test Score**. Conceptually, the control variable will improve a model by removing variance in the DV to make the estimate either more precise (smaller standard errors) or less bias (adjust the slope of the policy variable).  


Teacher Quality has partially reduced the unexplained portions of the outomes of test scores in our main model.

Socio Economic Status has removed the explained portion of the variance as we can see in the slope from our second graph. 

<br>

To change the slope of this model, it would require the variable selected would need to be correlated with caffiene consumption. The stress index variable is the most closely correlated with caffiene consumptuion, therefore it should produce a slope of zero. If the items were uncorrelated, the slope would not change. 
<br>


# Caffeine and Exercise 

Policy Question: Which would result in a larger standard error associated with caffeine if removed from the model?


Since Gym Time is not correlated with Stress Index, or Caffeine, it would produce a larger standard error if it were removed from our caffeine model. If it were left in, there would be a smaller standard error as uncorrelated variables create smaller standard errors. 


```{r, echo=F, results="asis"}
URL <- "https://raw.githubusercontent.com/DS4PS/cpp-523-fall-2019/master/labs/data/caffeine-heart-rate-w-controls.csv"
dat.caffeine <- read.csv( URL )
mod <- lm( heart.rate ~ caffeine + stress.index + gym.time, data=dat.caffeine )
stargazer( mod, header=F, type="html", omit.stat = c("adj.rsq", "f") )
```





```{r, fig.width=10, fig.height=10, echo=F}

panel.cor <- function(x, y, digits=2, prefix="", cex.cor)
{
    usr <- par("usr"); on.exit(par(usr))
    par(usr = c(0, 1, 0, 1))
    r <- cor(x, y, use="pairwise.complete.obs")
    txt <- format(c(r, 0.123456789), digits=digits)[1]
    txt <- paste(prefix, txt, sep="")
    if(missing(cex.cor)) cex <- 0.8/strwidth(txt)
    
    test <- cor.test(x,y)
    # borrowed from printCoefmat
    Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
                  cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
                  symbols = c("***", "**", "*", ".", " "))
    
    text(0.5, 0.5, txt, cex = 2 )
    text(.7, .8, Signif, cex=3, col=2)
}


panel.smooth <- function (x, y, col = par("col"), bg = NA, pch = par("pch"), 
  cex = 1, col.smooth = "red", span = 2/3, iter = 3, ...) 
{
  points(x, y, pch = 19, col = gray(0.5,0.5), 
         bg = bg, cex = 1.7)
  ok <- is.finite(x) & is.finite(y)
  if (any(ok)) 
    lines(stats::lowess(x[ok], y[ok], f = span, iter = iter), 
      col = col.smooth, lwd=2, ...)
}


pairs( dat.caffeine, lower.panel=panel.smooth, upper.panel=panel.cor)

```



<br><br>
